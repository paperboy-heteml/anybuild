#!/bin/bash
# kuroda

set -e

config=/etc/anybuild/sync-lang

_usage() {
    (
      echo "Usage:"
      echo "    sync-lang check [lang_name[/version]]"
      echo "    sync-lang pull|push [--dry-run] [lang_name[/version]] "
      echo ""
      echo "Options:"
      echo "    --dryrun|-n"
      echo "    --delete"
      echo "    --debug"
    ) 1>&2
    exit 1
}

_help() {
    _usage
}

# 差分が無いときのみ0で終了
_check() {
    rsync_opts='-av --delete --dry-run --max-delete 1 --stats'

    stats=$(
      rsync $rsync_opts \
        "${LANG_SERVER}::${RSYNCD_RO_MODULE}${REMOTE_PATH}/" "${LOCAL_PATH}/" |
        awk '/^(deleting|Number of files transferred:)/'
    )

    test -z "$stats" && exit 2

    [[ "$stats" =~ 'deleting' ]] && exit 1

    diff_cnt=$( echo $stats | awk '/Number of files transferred:/{ print $NF }' )

    if [ $diff_cnt -eq 0 ]; then
        exit 0
    else
        exit 1
    fi
}

_pull() {
    rsync_opts='-avz'

    test -n "$OPT_DRYRUN" && rsync_opts="$rsync_opts --dry-run"
    test -n "$OPT_DELETE" && rsync_opts="$rsync_opts --delete"

    set -x
    mkdir -p "$LOCAL_PATH"
    rsync $rsync_opts "${LANG_SERVER}::${RSYNCD_RO_MODULE}${REMOTE_PATH}/" "${LOCAL_PATH}/"
}

_push() {
    rsync_opts='-avz'

    test -n "$OPT_DRYRUN" && rsync_opts="$rsync_opts --dry-run"
    test -n "$OPT_DELETE" && rsync_opts="$rsync_opts --delete"

    set -x
    rsync $rsync_opts "${LOCAL_PATH}/" "${LANG_SERVER}::${RSYNCD_RW_MODULE}${REMOTE_PATH}/"
}

## main ------------------------
subcommand="_${1}"

if [[ ! "$(type $subcommand 2> /dev/null)" =~ 'is a function' ]]; then
    _usage
else
    shift
fi

while [[ "$1" =~ ^- ]]; do
    case $1 in
        --debug)
            set -x
        ;;
        --dry-run|-n)
            OPT_DRYRUN=1
        ;;
        --delete)
            OPT_DELETE=1
        ;;
        *)
            _usage
        ;;
    esac
    shift
done

rel_path="$1"
# strip slashes
rel_path="$(echo "$rel_path" | sed -e 's|^/*||' -e 's|/*$||')"

if [ -f "$config" ]; then
    source "$config"
fi

if [ ! -x "$(which facter)" ]; then
    echo "This script requires facter command." 1>&2
    exit 1
fi

if [  -z "$LANG_SERVER" ]; then
    echo 'No (lang)LANG_SERVER specified.' 1>&2
    exit 1
fi

## Defaults
: ${ROLE:='generic'}
: ${LANG_PATH:='/usr/local/lang'}
: ${OS:=$(facter operatingsystem)}
: ${OS_RELEASE:=$(facter operatingsystemrelease | sed 's/\.[0-9]$//')}

ARCH=$(facter architecture)
LOCAL_PATH="$LANG_PATH"
REMOTE_PATH="/${ROLE}/${OS}/${OS_RELEASE}/${ARCH}"

RSYNCD_RO_MODULE='lang_ro'
RSYNCD_RW_MODULE='lang_rw'

if [ -n "$rel_path" -a "$rel_path" != "/" ]; then
  LOCAL_PATH="${LOCAL_PATH}/${rel_path}"
  REMOTE_PATH="${REMOTE_PATH}/${rel_path}"
fi

$subcommand
